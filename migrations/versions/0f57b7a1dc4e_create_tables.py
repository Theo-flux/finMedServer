"""create tables

Revision ID: 0f57b7a1dc4e
Revises: 
Create Date: 2025-08-18 11:04:28.919931

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0f57b7a1dc4e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('departments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_departments_uid'), 'departments', ['uid'], unique=True)
    op.create_table('expenses_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expenses_category_uid'), 'expenses_category', ['uid'], unique=True)
    op.create_table('patients',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('hospital_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gender', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patients_hospital_id'), 'patients', ['hospital_id'], unique=True)
    op.create_index(op.f('ix_patients_uid'), 'patients', ['uid'], unique=True)
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_uid'), 'roles', ['uid'], unique=True)
    op.create_table('services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_services_uid'), 'services', ['uid'], unique=True)
    op.create_table('bills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.Uuid(), nullable=False),
    sa.Column('serial_no', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('billed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('service_uid', sa.Uuid(), nullable=False),
    sa.Column('patient_uid', sa.Uuid(), nullable=True),
    sa.Column('department_uid', sa.Uuid(), nullable=False),
    sa.Column('bill_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gross_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('tax_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('net_amount_due', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['department_uid'], ['departments.uid'], ),
    sa.ForeignKeyConstraint(['patient_uid'], ['patients.uid'], ),
    sa.ForeignKeyConstraint(['service_uid'], ['services.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bills_serial_no'), 'bills', ['serial_no'], unique=True)
    op.create_index(op.f('ix_bills_uid'), 'bills', ['uid'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('staff_no', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('department_uid', sa.Uuid(), nullable=False),
    sa.Column('role_uid', sa.Uuid(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('avatar', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['department_uid'], ['departments.uid'], ),
    sa.ForeignKeyConstraint(['role_uid'], ['roles.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_staff_no'), 'users', ['staff_no'], unique=True)
    op.create_index(op.f('ix_users_uid'), 'users', ['uid'], unique=True)
    op.create_table('budgets',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.Uuid(), nullable=False),
    sa.Column('serial_no', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('received_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('department_uid', sa.Uuid(), nullable=False),
    sa.Column('user_uid', sa.Uuid(), nullable=False),
    sa.Column('approver_uid', sa.Uuid(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('availability', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('gross_amount', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('amount_remaining', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('short_description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['approver_uid'], ['users.uid'], ),
    sa.ForeignKeyConstraint(['department_uid'], ['departments.uid'], ),
    sa.ForeignKeyConstraint(['user_uid'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_budgets_serial_no'), 'budgets', ['serial_no'], unique=True)
    op.create_index(op.f('ix_budgets_uid'), 'budgets', ['uid'], unique=True)
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.Uuid(), nullable=False),
    sa.Column('serial_no', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('received_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('bill_uid', sa.Uuid(), nullable=False),
    sa.Column('user_uid', sa.Uuid(), nullable=True),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('amount_received', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('reference_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('Note', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['bill_uid'], ['bills.uid'], ),
    sa.ForeignKeyConstraint(['user_uid'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payments_serial_no'), 'payments', ['serial_no'], unique=True)
    op.create_index(op.f('ix_payments_uid'), 'payments', ['uid'], unique=True)
    op.create_table('expenses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.Uuid(), nullable=False),
    sa.Column('serial_no', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('budget_uid', sa.Uuid(), nullable=False),
    sa.Column('expenses_category_uid', sa.Uuid(), nullable=False),
    sa.Column('user_uid', sa.Uuid(), nullable=False),
    sa.Column('amount_spent', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('short_description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('note', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['budget_uid'], ['budgets.uid'], ),
    sa.ForeignKeyConstraint(['expenses_category_uid'], ['expenses_category.uid'], ),
    sa.ForeignKeyConstraint(['user_uid'], ['users.uid'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_expenses_serial_no'), 'expenses', ['serial_no'], unique=True)
    op.create_index(op.f('ix_expenses_uid'), 'expenses', ['uid'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_expenses_uid'), table_name='expenses')
    op.drop_index(op.f('ix_expenses_serial_no'), table_name='expenses')
    op.drop_table('expenses')
    op.drop_index(op.f('ix_payments_uid'), table_name='payments')
    op.drop_index(op.f('ix_payments_serial_no'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_budgets_uid'), table_name='budgets')
    op.drop_index(op.f('ix_budgets_serial_no'), table_name='budgets')
    op.drop_table('budgets')
    op.drop_index(op.f('ix_users_uid'), table_name='users')
    op.drop_index(op.f('ix_users_staff_no'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_bills_uid'), table_name='bills')
    op.drop_index(op.f('ix_bills_serial_no'), table_name='bills')
    op.drop_table('bills')
    op.drop_index(op.f('ix_services_uid'), table_name='services')
    op.drop_table('services')
    op.drop_index(op.f('ix_roles_uid'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_patients_uid'), table_name='patients')
    op.drop_index(op.f('ix_patients_hospital_id'), table_name='patients')
    op.drop_table('patients')
    op.drop_index(op.f('ix_expenses_category_uid'), table_name='expenses_category')
    op.drop_table('expenses_category')
    op.drop_index(op.f('ix_departments_uid'), table_name='departments')
    op.drop_table('departments')
    # ### end Alembic commands ###
